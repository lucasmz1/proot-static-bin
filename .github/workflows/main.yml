name: build

on:
  schedule:
    - cron: "0 6 * * 0"
  push:
    branches:
      - master

jobs:
  build:
    name: 'setup os target'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
          
      - name: 'build proot'
        run: |
          sudo apt update
          sudo sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install zlib1g-dev
          sudo apt install libtalloc-dev
          sudo apt install libexpat1-dev
          sudo apt install libxml2-dev
          sudo apt install libc6
          sudo apt install libc6-dev
          sudo apt install python3-dev build-essential pkg-config gcc-multilib g++-multilib
          pkg-config --libs --cflags python3
          git clone https://github.com/proot-me/proot.git
          cd proot/
          make -C src loader.elf loader-m32.elf build.h
          make -C src proot
          make -C src clean
          export LDFLAGS="-static"
          make -C src proot
          
          find ./src/ -iname 'proot' | xargs -i -t mv {} dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: proot place
          path: 'dist/*proot*'

  release:
    needs: [build]
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Download proot artifact
        uses: actions/download-artifact@v4
        with:
          name: proot place

      - name: Delete Previous Release
        run: |
          gh release delete "${APP_VERSION}" --repo "${GITHUB_REPOSITORY}" --cleanup-tag -y || echo "No release to delete"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Continuous universal"
          tag_name: continuous-universal
          prerelease: false
          draft: false
          generate_release_notes: false
          make_latest: true
          files: |
            *.tar.xz*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
