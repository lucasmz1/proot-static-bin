name: build

on:
  schedule:
    - cron: "0 6 * * 0"
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    name: 'setup vm'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install build dependencies
        run: |
          set -eux
          sudo apt-get update -qq
          sudo apt-get install -qq librdkafka1 librdkafka-dev curl gdb lcov libc6-dev libarchive-dev libtalloc-dev sloccount libexpat1-dev strace swig uthash-dev python3-dev lzop wget binutils libexpat-dev zlib1g-dev
          sudo apt-get install -qq build-essential pkg-config git golang-go
          wget -c -q https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip 
          unzip build-wrapper-linux-x86.zip 
          chmod +x ./build-wrapper-linux-x86/build-wrapper-linux-x86-64
          echo "$PWD/build-wrapper-linux-x86" >> $GITHUB_PATH
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20
          sudo apt-get install -qq clang clang-tools curl gcc gdb git lcov libarchive-dev make sloccount strace swig libtalloc-dev uthash-dev

      - name: Build static binaries
        run: |
          mkdir dist
          export CC=clang
          export CXX=clang++
          make -C src loader.elf build.h
          export CFLAGS="-I/usr/include/libxml2"
          export LDFLAGS="-static -lexpat -lz"
          make -C src proot care V=1
          ##make -C src prefix=$PWD/dist/ install
          find ./src/ -iname 'proot' | xargs -i -t mv {} dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: proot place
          path: 'dist/*proot*'

  release:
    needs: [build]
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Download proot artifact
        uses: actions/download-artifact@v4
        with:
          name: proot place

      - name: Delete Previous Release
        run: |
          gh release delete "${APP_VERSION}" --repo "${GITHUB_REPOSITORY}" --cleanup-tag -y || echo "No release to delete"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Continuous universal"
          tag_name: continuous-universal
          prerelease: false
          draft: false
          generate_release_notes: false
          make_latest: true
          files: |
            *.tar.xz*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
